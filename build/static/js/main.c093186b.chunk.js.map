{"version":3,"sources":["index.js"],"names":["Box","className","this","props","top","bottom","left","right","winner","onClick","React","Component","Board","state","currentPlayer","scores","boxes","i","Number","height","j","width","map","row","box","e","handleClick","setState","x","clientX","target","getBoundingClientRect","y","clientY","newBoxes","slice","winnerFlag","turnFlag","checkWinner","length","Game","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.c093186b.chunk.js","sourcesContent":["import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\n\nclass Box extends React.Component {\n\n  render() {\n    return (\n      <div className={\"box\" +\n          (this.props.top ? \" top\" + this.props.top : \"\") +\n          (this.props.bottom ? \" bottom\" + this.props.bottom : \"\") +\n          (this.props.left ? \" left\" + this.props.left : \"\") +\n          (this.props.right ? \" right\" + this.props.right : \"\") +\n          (this.props.winner ? \" winner\" + this.props.winner : \"\")}\n          onClick={this.props.onClick}>\n        <span className='winner'>{this.props.winner || \"_\"}</span>\n        <div className='topLeft'></div>\n        <div className='topRight'></div>\n        <div className='bottomLeft'></div>\n        <div className='bottomRight'></div>\n      </div>\n    );\n  }\n}\n\n\n\nclass Board extends React.Component {\n  constructor( props ) {\n    super( props );\n    this.state = {\n      currentPlayer: \"A\",\n      scores: {\"A\": 0, \"B\": 0},\n      boxes: []\n    }\n    for (let i=0; i<Number( props.height); i++ ) {\n      this.state.boxes[i] = [];\n      for (let j=0; j<Number( props.width); j++ ) {\n        this.state.boxes[i][j] = {\n          top: null,\n          left: null,\n          right: null,\n          bottom: null,\n          winner: \"\"\n        };\n      }\n    }\n    \n  }\n\n  render() {\n\n    return (\n      <div className='board'>\n        <div className=\"status\">\n          Current Player: {this.state.currentPlayer}<br />\n          Player A: {this.state.scores['A']}<br />\n          Player B: {this.state.scores['B']}\n        </div>\n        \n        {this.state.boxes.map( (row,i) => (\n          <div className='row'>\n            {row.map( (box,j) => <Box\n                winner={box.winner}\n                top={box.top}\n                bottom={box.bottom}\n                left={box.left}\n                right={box.right}\n                i={i}\n                j={j}\n                onClick={(e)=>this.handleClick(e, i, j)}/>)}\n          </div>\n          ))\n        }\n\n       \n      </div>\n\n        \n    );\n  }\n\n  checkWinner( box ) {\n    this.setState( (state) => {\n      if ( box.top && box.bottom && box.left && box.right  ) {\n        state.scores[this.state.currentPlayer]++;\n      }\n      return state;        \n    });\n    if ( box.top && box.bottom && box.left && box.right ) {\n      return this.state.currentPlayer;\n    }\n    else return \"\";\n  }\n\n  handleClick( e, i, j ) {\n    // First, get coordinates of click relative to box\n    let x = e.clientX - e.target.getBoundingClientRect().left;\n    let y = e.clientY - e.target.getBoundingClientRect().top;\n\n    // Clone boxes state\n    let newBoxes = this.state.boxes.slice();\n    let winnerFlag = false, turnFlag = false;\n\n    // let newBoxes = [];\n    // for ( let k=0; k<this.state.boxes.length; k++ ) {\n    //   newBoxes[k] = this.state.boxes[k].slice();\n    // }\n\n\n    if ( y < 10 ) {\n      if ( ! newBoxes[i][j].top ) {\n        newBoxes[i][j].top = this.state.currentPlayer;\n        turnFlag = true;\n        if ( i > 0 ) {\n          newBoxes[i-1][j].bottom = this.state.currentPlayer;\n          newBoxes[i-1][j].winner = this.checkWinner( newBoxes[i-1][j] );\n          if ( newBoxes[i-1][j].winner ) winnerFlag = true;\n        }\n      }\n    }\n    else if ( y > 40 ) {\n      if ( ! newBoxes[i][j].bottom ) {\n        newBoxes[i][j].bottom = this.state.currentPlayer;\n        turnFlag = true;\n        if ( i < newBoxes.length - 1 ) {\n          newBoxes[i+1][j].top = this.state.currentPlayer;\n          newBoxes[i+1][j].winner = this.checkWinner( newBoxes[i+1][j] );\n          if ( newBoxes[i+1][j].winner ) winnerFlag = true;\n        }\n      }\n    }\n    else if ( x < 10 ) {\n      if ( ! newBoxes[i][j].left ) {\n        newBoxes[i][j].left = this.state.currentPlayer;\n        turnFlag = true;\n        if ( j > 0 ) {\n          newBoxes[i][j-1].right = this.state.currentPlayer;\n          newBoxes[i][j-1].winner = this.checkWinner( newBoxes[i][j-1] );\n          if ( newBoxes[i][j-1].winner ) winnerFlag = true;\n        }\n      }\n    }\n    else if ( x > 40 ) {\n      if ( ! newBoxes[i][j].right ) {\n        newBoxes[i][j].right = this.state.currentPlayer;\n        turnFlag = true;\n        if ( j < newBoxes[i].length - 1 ) {\n          newBoxes[i][j+1].left = this.state.currentPlayer;\n          newBoxes[i][j+1].winner = this.checkWinner( newBoxes[i][j+1] );\n          if ( newBoxes[i][j+1].winner ) winnerFlag = true;\n        }\n      }\n    }\n\n\n    // Check if current box is winner\n    newBoxes[i][j].winner = this.checkWinner( newBoxes[i][j] );\n    if ( newBoxes[i][j].winner ) winnerFlag = true;\n\n    // Update current player\n\n    if ( turnFlag && !winnerFlag ) {\n      if ( this.state.currentPlayer === \"A\" )\n        this.setState( {currentPlayer: \"B\"});\n      else\n        this.setState( {currentPlayer: \"A\"});\n    }\n\n    // Update state\n    this.setState( {boxes: newBoxes} );\n  }\n\n}\n\n\nclass Game extends React.Component {\n\n  constructor( props )\n  {\n    super( props );\n    this.currentPlayer = 1;\n  }\n\n  render() {\n    return (\n      <div className=\"game\">\n        <div className=\"game-board\">\n          <Board height='5' width='10' />\n        </div>\n        <div className=\"game-info\">\n          <div></div>\n        </div>\n      </div>\n    );\n  }\n}\n\n// ========================================\n\nReactDOM.render(\n  <Game />,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}